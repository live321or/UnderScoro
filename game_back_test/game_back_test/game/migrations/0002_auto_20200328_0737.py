# Generated by Django 3.0.4 on 2020-03-28 07:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('game', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=30)),
                ('description', models.TextField(max_length=4096)),
                ('chance_work', models.FloatField(default=1)),
                ('chance_apply', models.FloatField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=30)),
                ('description', models.TextField(max_length=4096)),
                ('minLvl', models.IntegerField(default=0)),
                ('mass', models.FloatField(default=1)),
                ('effects', models.ManyToManyField(related_name='effects', to='game.Effect')),
            ],
        ),
        migrations.CreateModel(
            name='ItemInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos_effect_num', models.PositiveSmallIntegerField()),
                ('saleable', models.BooleanField(default=True)),
                ('item_id', models.ForeignKey(on_delete=models.SET(1), to='game.Item')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=30)),
                ('description', models.TextField(max_length=4096)),
            ],
        ),
        migrations.CreateModel(
            name='VariableValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.FloatField()),
                ('max_value', models.FloatField()),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='attributes',
            field=models.PositiveIntegerField(default=9),
        ),
        migrations.AddField(
            model_name='character',
            name='skill_points',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='ArmorInstance',
            fields=[
                ('iteminstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.ItemInstance')),
                ('arm', models.IntegerField()),
            ],
            bases=('game.iteminstance',),
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_val', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.VariableValue')),
            ],
        ),
        migrations.CreateModel(
            name='LocationPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seconds', models.PositiveIntegerField(default=10)),
                ('from_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_loc', to='game.Location')),
                ('to_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_loc', to='game.Location')),
            ],
        ),
        migrations.AddField(
            model_name='iteminstance',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Character'),
        ),
        migrations.AddField(
            model_name='item',
            name='main_effect_value',
            field=models.ForeignKey(on_delete=models.SET(1), to='game.VariableValue'),
        ),
        migrations.AddField(
            model_name='item',
            name='possible_effects',
            field=models.ManyToManyField(related_name='pos_effects', to='game.Effect'),
        ),
        migrations.AddField(
            model_name='item',
            name='requirements',
            field=models.ManyToManyField(to='game.Requirement'),
        ),
        migrations.AddField(
            model_name='effect',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.VariableValue'),
        ),
        migrations.AddField(
            model_name='character',
            name='location',
            field=models.ForeignKey(default=0, on_delete=models.SET(1), to='game.Location'),
        ),
        migrations.CreateModel(
            name='WeaponInstance',
            fields=[
                ('iteminstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.ItemInstance')),
                ('dmg', models.ForeignKey(on_delete=models.SET(1), to='game.VariableValue')),
            ],
            bases=('game.iteminstance',),
        ),
    ]
